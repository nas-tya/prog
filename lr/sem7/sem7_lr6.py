# -*- coding: utf-8 -*-
"""sem7 lr6 Brazhkina AD.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10111CjDCpHkNpakM2PMM_BrBpFkT-BEv
"""

from urllib.request import urlopen
from bs4 import BeautifulSoup
html = urlopen('https://www.herzen.spb.ru/main/news/')
bs = BeautifulSoup(html, "html.parser")
nameList = bs.find('td',{'class':'blockwh'})
href_list = []
for link in nameList.find_all('a', href=True):
    href_list.append('https://www.herzen.spb.ru' + link['href'])
print(href_list)

# Commented out IPython magic to ensure Python compatibility.
# %%sh
# 
# pip install yargy # для обработки текста 
# pip install natasha # для обработки текста 
# pip install wordcloud # для создания изображения с облаком тегов

i = 0
for el in href_list[:3]:
  html2 = urlopen(href_list[i])
  bs2 = BeautifulSoup(html2, "html.parser")
  # news = bs.find('td',{'class':'blockwh'})
  text = bs.find('td',{'class':'blockwh'}).get_text()
  with open("text.txt","w") as file:
    file.write(str(text))
  i += 1

from natasha import (
    Segmenter,
    MorphVocab,
    
    NewsEmbedding,
    NewsMorphTagger,
    NewsSyntaxParser,
    NewsNERTagger,
    
    PER,
    NamesExtractor,

    Doc
)

segmenter = Segmenter()
morph_vocab = MorphVocab()

emb = NewsEmbedding()
morph_tagger = NewsMorphTagger(emb)
syntax_parser = NewsSyntaxParser(emb)
ner_tagger = NewsNERTagger(emb)

names_extractor = NamesExtractor(morph_vocab)

f = open('text.txt', "r", encoding="utf-8")
text = f.read()


doc = Doc(text)
doc.segment(segmenter)
doc.tag_morph(morph_tagger)
doc.parse_syntax(syntax_parser)
doc.tag_ner(ner_tagger)


doc.tag_ner(ner_tagger)
print((doc.spans[0]))
for span in doc.spans:
    span.normalize(morph_vocab)
for token in doc.tokens:
    token.lemmatize(morph_vocab)
    
# print({_.text: _.normal for _ in doc.spans})


for span in doc.spans:
    if span.type == PER:
        span.extract_fact(names_extractor)
    
{_.normal: _.fact.as_dict for _ in doc.spans if _.fact}

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline

from wordcloud import WordCloud
import matplotlib.pyplot as plt
import requests

f = open('text.txt', "r", encoding="utf-8")
text = f.read()
wordcloud = WordCloud().generate(text)
plt.figure(figsize=(2, 2), dpi=2000)
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")